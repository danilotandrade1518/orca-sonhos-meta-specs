# üìã Or√ßaSonhos - Domain Entity Schemas
# Schemas estruturados para otimiza√ß√£o de IA/RAG

metadata:
  version: "1.0.0"
  description: "Schemas JSON/YAML das entidades principais do dom√≠nio Or√ßaSonhos"
  created: "2025-01-24"
  ai_optimized: true
  tags: ["schema", "entities", "domain", "validation", "contracts"]

# =============================================================================
# AGREGADOS PRINCIPAIS
# =============================================================================

Budget:
  type: "aggregate_root"
  description: "Or√ßamento - Container virtual que agrupa transa√ß√µes, metas e categorias"
  table: "budgets"

  properties:
    id:
      type: "string"
      format: "uuid"
      description: "Identificador √∫nico do or√ßamento"
      example: "550e8400-e29b-41d4-a716-446655440000"

    name:
      type: "string"
      minLength: 1
      maxLength: 100
      description: "Nome descritivo do or√ßamento"
      examples: ["Casa", "Pessoal", "Viagem Europa", "Neg√≥cio"]

    description:
      type: "string"
      maxLength: 500
      nullable: true
      description: "Descri√ß√£o detalhada do or√ßamento"

    type:
      type: "string"
      enum: ["personal", "shared", "family", "business"]
      description: "Tipo de or√ßamento"
      semantic_mapping:
        personal: "Or√ßamento individual de um usu√°rio"
        shared: "Or√ßamento compartilhado entre m√∫ltiplos usu√°rios"
        family: "Or√ßamento familiar para gest√£o dom√©stica"
        business: "Or√ßamento para pequenos neg√≥cios"

    owner_id:
      type: "string"
      format: "uuid"
      description: "ID do usu√°rio criador/propriet√°rio do or√ßamento"

    participants:
      type: "array"
      items:
        type: "string"
        format: "uuid"
      description: "Lista de IDs de usu√°rios com acesso ao or√ßamento"
      minItems: 1

    is_active:
      type: "boolean"
      default: true
      description: "Indica se o or√ßamento est√° ativo para uso"

    created_at:
      type: "string"
      format: "date-time"
      description: "Data/hora de cria√ß√£o"

    updated_at:
      type: "string"
      format: "date-time"
      description: "Data/hora da √∫ltima atualiza√ß√£o"

  relationships:
    has_many:
      - entity: "Transaction"
        foreign_key: "budget_id"
      - entity: "Goal"
        foreign_key: "budget_id"
      - entity: "Category"
        foreign_key: "budget_id"
      - entity: "Envelope"
        foreign_key: "budget_id"
    belongs_to:
      - entity: "User"
        foreign_key: "owner_id"
    belongs_to_many:
      - entity: "User"
        through: "budget_participants"

  business_rules:
    - rule: "budget_must_have_participants"
      description: "Budget deve ter pelo menos um participante"
      validation: "participants.length >= 1"

    - rule: "personal_budget_single_participant"
      description: "Or√ßamento pessoal deve ter apenas um participante"
      validation: "type !== 'personal' || participants.length === 1"

    - rule: "owner_must_be_participant"
      description: "Propriet√°rio deve estar na lista de participantes"
      validation: "participants.includes(owner_id)"

# -----------------------------------------------------------------------------

Transaction:
  type: "aggregate_root"
  description: "Transa√ß√£o - Registro de entrada ou sa√≠da de dinheiro"
  table: "transactions"

  properties:
    id:
      type: "string"
      format: "uuid"
      description: "Identificador √∫nico da transa√ß√£o"

    budget_id:
      type: "string"
      format: "uuid"
      description: "ID do or√ßamento ao qual a transa√ß√£o pertence"

    category_id:
      type: "string"
      format: "uuid"
      description: "ID da categoria da transa√ß√£o"

    account_id:
      type: "string"
      format: "uuid"
      nullable: true
      description: "ID da conta que originou/recebeu a transa√ß√£o"

    amount_cents:
      type: "integer"
      minimum: 1
      description: "Valor da transa√ß√£o em centavos (sempre positivo)"
      examples: [1500, 25000, 100]
      semantic_note: "R$ 15,00 = 1500 centavos"

    description:
      type: "string"
      minLength: 1
      maxLength: 200
      description: "Descri√ß√£o da transa√ß√£o"
      examples: ["Supermercado Extra", "Sal√°rio Janeiro", "Transfer√™ncia para poupan√ßa"]

    date:
      type: "string"
      format: "date"
      description: "Data da transa√ß√£o (pode ser passada, presente ou futura)"
      examples: ["2025-01-15", "2024-12-30", "2025-03-01"]

    type:
      type: "string"
      enum: ["income", "expense", "transfer"]
      description: "Tipo da transa√ß√£o"
      semantic_mapping:
        income: "Entrada de dinheiro (receita)"
        expense: "Sa√≠da de dinheiro (despesa)"
        transfer: "Movimenta√ß√£o entre contas/or√ßamentos"

    status:
      type: "string"
      enum: ["scheduled", "completed", "overdue", "cancelled"]
      description: "Status atual da transa√ß√£o"
      semantic_mapping:
        scheduled: "Agendada para o futuro, n√£o afeta saldo atual"
        completed: "Realizada, afeta o saldo atual"
        overdue: "Data passada mas ainda n√£o conclu√≠da"
        cancelled: "Cancelada, n√£o afeta saldo"

    payment_method:
      type: "string"
      nullable: true
      description: "M√©todo de pagamento utilizado"
      examples: ["Dinheiro", "Cart√£o Nubank", "PIX", "D√©bito Ita√∫"]

    is_recurring:
      type: "boolean"
      default: false
      description: "Indica se √© uma transa√ß√£o recorrente"

    recurrence_pattern:
      type: "string"
      nullable: true
      enum: ["monthly", "weekly", "yearly", "custom"]
      description: "Padr√£o de recorr√™ncia (se aplic√°vel)"

    created_by:
      type: "string"
      format: "uuid"
      description: "ID do usu√°rio que criou a transa√ß√£o"

    created_at:
      type: "string"
      format: "date-time"
      description: "Data/hora de cria√ß√£o"

    updated_at:
      type: "string"
      format: "date-time"
      description: "Data/hora da √∫ltima atualiza√ß√£o"

  relationships:
    belongs_to:
      - entity: "Budget"
        foreign_key: "budget_id"
      - entity: "Category"
        foreign_key: "category_id"
      - entity: "Account"
        foreign_key: "account_id"
      - entity: "User"
        foreign_key: "created_by"

  business_rules:
    - rule: "amount_must_be_positive"
      description: "Valor deve ser positivo"
      validation: "amount_cents > 0"

    - rule: "scheduled_transactions_future_date"
      description: "Transa√ß√µes agendadas devem ter data futura"
      validation: "status !== 'scheduled' || date > today()"

    - rule: "completed_transactions_impact_balance"
      description: "Apenas transa√ß√µes conclu√≠das afetam o saldo"
      validation: "impacts_balance = (status === 'completed')"

# -----------------------------------------------------------------------------

Goal:
  type: "aggregate_root"
  description: "Meta - Objetivo financeiro com valor-alvo e prazo"
  table: "goals"

  properties:
    id:
      type: "string"
      format: "uuid"
      description: "Identificador √∫nico da meta"

    budget_id:
      type: "string"
      format: "uuid"
      description: "ID do or√ßamento ao qual a meta pertence"

    name:
      type: "string"
      minLength: 1
      maxLength: 100
      description: "Nome da meta (espec√≠fico e claro)"
      examples: ["Viagem para Europa", "Comprar carro", "Reserva de emerg√™ncia"]

    description:
      type: "string"
      maxLength: 500
      nullable: true
      description: "Descri√ß√£o detalhada da meta"

    target_amount_cents:
      type: "integer"
      minimum: 100
      description: "Valor-alvo da meta em centavos"
      examples: [2500000, 1500000, 500000]
      semantic_note: "R$ 25.000,00 = 2500000 centavos"

    current_amount_cents:
      type: "integer"
      minimum: 0
      default: 0
      description: "Valor j√° acumulado para a meta em centavos"

    target_date:
      type: "string"
      format: "date"
      description: "Data-alvo para alcan√ßar a meta"

    priority:
      type: "string"
      enum: ["low", "medium", "high", "critical"]
      default: "medium"
      description: "Prioridade da meta"

    category:
      type: "string"
      enum: ["home", "travel", "education", "emergency", "vehicle", "health", "business", "other"]
      description: "Categoria tem√°tica da meta"
      semantic_mapping:
        home: "Casa pr√≥pria, reforma, mob√≠lia"
        travel: "Viagens, turismo, interc√¢mbio"
        education: "Cursos, faculdade, livros"
        emergency: "Reserva de emerg√™ncia"
        vehicle: "Carro, moto, transporte"
        health: "Plano de sa√∫de, tratamentos"
        business: "Investimentos, neg√≥cio pr√≥prio"
        other: "Outras metas n√£o categorizadas"

    status:
      type: "string"
      enum: ["active", "completed", "paused", "cancelled"]
      default: "active"
      description: "Status atual da meta"

    is_smart_goal:
      type: "boolean"
      default: true
      description: "Indica se segue metodologia SMART"

    monthly_contribution_cents:
      type: "integer"
      nullable: true
      minimum: 0
      description: "Valor sugerido de contribui√ß√£o mensal"

    created_at:
      type: "string"
      format: "date-time"
      description: "Data/hora de cria√ß√£o"

  relationships:
    belongs_to:
      - entity: "Budget"
        foreign_key: "budget_id"
    tracks_through:
      - entity: "Transaction"
        description: "Transa√ß√µes que contribuem para a meta"

  computed_fields:
    progress_percentage:
      type: "number"
      format: "float"
      description: "Porcentagem de progresso (0-100)"
      calculation: "(current_amount_cents / target_amount_cents) * 100"

    remaining_amount_cents:
      type: "integer"
      description: "Valor restante para atingir a meta"
      calculation: "target_amount_cents - current_amount_cents"

    months_remaining:
      type: "integer"
      description: "Meses restantes at√© a data-alvo"
      calculation: "months_between(today(), target_date)"

    required_monthly_contribution:
      type: "integer"
      description: "Contribui√ß√£o mensal necess√°ria baseada no tempo restante"
      calculation: "remaining_amount_cents / months_remaining"

  business_rules:
    - rule: "target_amount_positive"
      description: "Valor-alvo deve ser positivo"
      validation: "target_amount_cents > 0"

    - rule: "current_not_exceed_target"
      description: "Valor atual n√£o pode exceder valor-alvo"
      validation: "current_amount_cents <= target_amount_cents"

    - rule: "target_date_future"
      description: "Data-alvo deve ser futura para metas ativas"
      validation: "status !== 'active' || target_date > today()"

    - rule: "smart_goal_criteria"
      description: "Meta SMART deve ter crit√©rios espec√≠ficos e mensur√°veis"
      validation: "!is_smart_goal || (name.length > 10 && target_amount_cents > 0 && target_date)"

# -----------------------------------------------------------------------------

Account:
  type: "aggregate_root"
  description: "Conta - Local onde o dinheiro est√° fisicamente armazenado"
  table: "accounts"

  properties:
    id:
      type: "string"
      format: "uuid"
      description: "Identificador √∫nico da conta"

    budget_id:
      type: "string"
      format: "uuid"
      description: "ID do or√ßamento ao qual a conta pertence"

    name:
      type: "string"
      minLength: 1
      maxLength: 100
      description: "Nome descritivo da conta"
      examples: ["Conta Corrente Ita√∫", "Carteira F√≠sica", "Conta Poupan√ßa", "Nubank"]

    type:
      type: "string"
      enum: ["checking", "savings", "cash", "digital_wallet", "credit_card", "investment", "other"]
      description: "Tipo da conta"
      semantic_mapping:
        checking: "Conta corrente banc√°ria"
        savings: "Conta poupan√ßa"
        cash: "Dinheiro em esp√©cie"
        digital_wallet: "Carteira digital (PIX, PayPal, etc)"
        credit_card: "Cart√£o de cr√©dito"
        investment: "Conta de investimentos"
        other: "Outros tipos de conta"

    balance_cents:
      type: "integer"
      description: "Saldo atual da conta em centavos (pode ser negativo)"
      examples: [15000, -5000, 0]
      semantic_note: "Valores negativos representam d√©bitos/limites utilizados"

    credit_limit_cents:
      type: "integer"
      nullable: true
      minimum: 0
      description: "Limite de cr√©dito dispon√≠vel (para cart√µes e contas com limite)"

    is_active:
      type: "boolean"
      default: true
      description: "Indica se a conta est√° ativa para uso"

    institution:
      type: "string"
      nullable: true
      maxLength: 100
      description: "Nome da institui√ß√£o financeira"
      examples: ["Ita√∫", "Nubank", "Bradesco", "Inter"]

    created_at:
      type: "string"
      format: "date-time"
      description: "Data/hora de cria√ß√£o"

  relationships:
    belongs_to:
      - entity: "Budget"
        foreign_key: "budget_id"
    has_many:
      - entity: "Transaction"
        foreign_key: "account_id"

  computed_fields:
    available_balance_cents:
      type: "integer"
      description: "Saldo dispon√≠vel (saldo + limite de cr√©dito)"
      calculation: "balance_cents + (credit_limit_cents || 0)"

    used_credit_percentage:
      type: "number"
      format: "float"
      description: "Porcentagem do limite de cr√©dito utilizado"
      calculation: "credit_limit_cents ? (abs(min(balance_cents, 0)) / credit_limit_cents) * 100 : 0"

  business_rules:
    - rule: "credit_limit_non_negative"
      description: "Limite de cr√©dito n√£o pode ser negativo"
      validation: "credit_limit_cents === null || credit_limit_cents >= 0"

    - rule: "credit_card_has_limit"
      description: "Cart√µes de cr√©dito devem ter limite definido"
      validation: "type !== 'credit_card' || credit_limit_cents > 0"

# =============================================================================
# VALUE OBJECTS
# =============================================================================

Money:
  type: "value_object"
  description: "Objeto de valor para representar quantias monet√°rias"

  properties:
    cents:
      type: "integer"
      description: "Valor em centavos para evitar problemas de ponto flutuante"
      examples: [1500, 25000, 0, -500]

    currency:
      type: "string"
      default: "BRL"
      enum: ["BRL", "USD", "EUR"]
      description: "C√≥digo da moeda (ISO 4217)"

  methods:
    format_display:
      return_type: "string"
      description: "Formata√ß√£o para exibi√ß√£o (R$ 15,00)"
      examples: ["R$ 15,00", "R$ 250,00", "R$ 0,00"]

    add:
      parameter: "Money other"
      return_type: "Money"
      description: "Soma duas quantias monet√°rias"

    subtract:
      parameter: "Money other"
      return_type: "Money"
      description: "Subtrai duas quantias monet√°rias"

    is_positive:
      return_type: "boolean"
      description: "Verifica se o valor √© positivo"

  business_rules:
    - rule: "same_currency_operations"
      description: "Opera√ß√µes matem√°ticas s√≥ entre mesma moeda"
      validation: "add/subtract operations require same currency"

# -----------------------------------------------------------------------------

DatePeriod:
  type: "value_object"
  description: "Per√≠odo de tempo com data in√≠cio e fim"

  properties:
    start_date:
      type: "string"
      format: "date"
      description: "Data de in√≠cio do per√≠odo"

    end_date:
      type: "string"
      format: "date"
      description: "Data de fim do per√≠odo"

  methods:
    contains_date:
      parameter: "string date"
      return_type: "boolean"
      description: "Verifica se uma data est√° dentro do per√≠odo"

    duration_days:
      return_type: "integer"
      description: "Dura√ß√£o do per√≠odo em dias"

  business_rules:
    - rule: "end_after_start"
      description: "Data fim deve ser posterior √† data in√≠cio"
      validation: "end_date >= start_date"

# =============================================================================
# ENUMS E CONSTANTES
# =============================================================================

enums:
  BudgetType:
    values: ["personal", "shared", "family", "business"]
    descriptions:
      personal: "Or√ßamento individual"
      shared: "Or√ßamento compartilhado"
      family: "Or√ßamento familiar"
      business: "Or√ßamento empresarial"

  TransactionType:
    values: ["income", "expense", "transfer"]
    descriptions:
      income: "Receita/Entrada"
      expense: "Despesa/Sa√≠da"
      transfer: "Transfer√™ncia"

  TransactionStatus:
    values: ["scheduled", "completed", "overdue", "cancelled"]
    descriptions:
      scheduled: "Agendada"
      completed: "Conclu√≠da"
      overdue: "Atrasada"
      cancelled: "Cancelada"

  GoalStatus:
    values: ["active", "completed", "paused", "cancelled"]
    descriptions:
      active: "Ativa"
      completed: "Conclu√≠da"
      paused: "Pausada"
      cancelled: "Cancelada"

  AccountType:
    values: ["checking", "savings", "cash", "digital_wallet", "credit_card", "investment", "other"]
    descriptions:
      checking: "Conta Corrente"
      savings: "Poupan√ßa"
      cash: "Dinheiro"
      digital_wallet: "Carteira Digital"
      credit_card: "Cart√£o de Cr√©dito"
      investment: "Investimento"
      other: "Outros"

# =============================================================================
# VALIDA√á√ïES CROSS-ENTITY
# =============================================================================

cross_entity_rules:
  - rule: "transaction_budget_consistency"
    description: "Transa√ß√£o deve pertencer a or√ßamento ativo"
    entities: ["Transaction", "Budget"]
    validation: "transaction.budget_id exists && budget.is_active = true"

  - rule: "goal_budget_consistency"
    description: "Meta deve pertencer a or√ßamento ativo"
    entities: ["Goal", "Budget"]
    validation: "goal.budget_id exists && budget.is_active = true"

  - rule: "account_transaction_consistency"
    description: "Transa√ß√£o s√≥ pode usar conta do mesmo or√ßamento"
    entities: ["Transaction", "Account"]
    validation: "transaction.account_id is null || transaction.budget_id = account.budget_id"